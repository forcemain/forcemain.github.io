<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>forcemain</title>
  
  
  <link href="https://forcemain.github.io/atom.xml" rel="self"/>
  
  <link href="https://forcemain.github.io/"/>
  <updated>2023-05-09T02:44:08.351Z</updated>
  <id>https://forcemain.github.io/</id>
  
  <author>
    <name>forcemain</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《Golang tutorial series》 2.Hello World</title>
    <link href="https://forcemain.github.io/79158520b0ea.html"/>
    <id>https://forcemain.github.io/79158520b0ea.html</id>
    <published>2023-05-09T00:07:00.000Z</published>
    <updated>2023-05-09T02:44:08.351Z</updated>
    
    <content type="html"><![CDATA[<p>这是我们 <a href="./34725805bd6c.html">Golang tutorial series</a> 的第 2 个教程。本教程我们将会建立 Go 的工作区，编写并运行我们的第一个 Go 程序。</p><p>学习一种编程语言的最好方法就是动手去实践，编写代码。让我们开始编写第一个 Go 程序吧。</p><p>我个人推荐使用 <a href="https://www.jetbrains.com/go/download/other.html">GoLand</a> 作为 IDE 。它具有自动补全，编码规范（Code Styling）以及许多其它的特性。</p><hr><h1 id="建立Go工作区"><a href="#建立Go工作区" class="headerlink" title="建立Go工作区"></a>建立Go工作区</h1><p>在编写代码之前，我们首先应该建立 Go 的工作区（Workspace）。</p><p>在 <strong>Mac 或 Linux</strong> 操作系统下，Go 工作区应该设置在 <strong>$HOME&#x2F;go</strong>。所以我们要在 <strong>$HOME</strong> 目录下创建 <strong>go</strong> 目录。</p><p>而在 <strong>Windows</strong> 下，工作区应该设置在 <strong>C:\Users{YourName}\go</strong>。所以请将 <strong>go</strong> 目录放置在 <strong>C:\Users{YourName}</strong> 下。</p><p>其实也可以通过设置 GOPATH 环境变量，用其它目录来作为工作区。但为了简单起见，我们采用上面提到的放置方法。</p><p>所有 Go 源文件都应该放置在工作区里的 <strong>src</strong> 目录下。请在刚添加的 <strong>go</strong> 目录下面创建目录 <strong>src</strong>。</p><p>所有 Go 项目都应该依次在 src 里面创建。我们在 src 里面创建一个目录 <strong>hello</strong> 来放置整个 hello world 项目。</p><p>创建上述目录之后，其目录结构如下：</p><pre class="line-numbers language-none"><code class="language-none">C:\Users\&#123;YourName&#125;\go\src\hello<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在我们刚刚创建的 hello 目录下，在 <strong>helloworld.go</strong> 文件里保存下面的程序。</p><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main<span class="token keyword">import</span> <span class="token string">"fmt"</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建该程序之后，其目录结构如下：</p><pre class="line-numbers language-none"><code class="language-none">C:\Users\&#123;YourName&#125;\go\src\hello\helloworld.go<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h1 id="运行Go程序"><a href="#运行Go程序" class="headerlink" title="运行Go程序"></a>运行Go程序</h1><p>运行 Go 程序有多种方式，我们下面依次介绍。</p><ol><li>使用 <strong>go run</strong> 命令 - 在命令提示符旁，输入 <code>go run &#123;workspacepath&#125;/src/hello/helloworld.go</code>。</li></ol><p>上述命令中的 <strong>workspacepath</strong> 应该替换为你自己的工作区路径（Windows 下的 <strong>C:&#x2F;Users&#x2F;{YourName}&#x2F;go</strong>，Linux 或 Mac 下的 <strong>$HOME&#x2F;go</strong>）。</p><p>在控制台上会看见 <code>Hello World</code> 的输出。</p><ol start="2"><li>使用 <strong>go install</strong> 命令 - 运行 <code>go install hello</code>，接着可以用 <code>&#123;workspacepath&#125;/bin/hello</code> 来运行该程序。</li></ol><p>上述命令中的 <strong>workspacepath</strong> 应该替换为你自己的工作区路径（Windows 下的 <strong>C:&#x2F;Users&#x2F;{YourName}&#x2F;go</strong>，Linux 或 Mac 下的 <strong>$HOME&#x2F;go</strong>）。</p><p>当你输入 <strong>go install hello</strong> 时，go 工具会在工作区中搜索 hello 包（hello 称之为包，我们后面会更加详细地讨论包）。接下来它会在工作区的 bin 目录下，创建一个名为 <code>hello</code>（Windows 下名为 <code>hello.exe</code>）的二进制文件。运行 <strong>go install hello</strong> 后，其目录结构如下所示：</p><pre class="line-numbers language-none"><code class="language-none">C:\Users\&#123;YourName&#125;\go\bin\hello.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="3"><li>使用 <a href="https://www.jetbrains.com/go/download/other.html">GoLand</a> -&gt; 项目（hello）右键 -&gt; 运行 -&gt; 【hello】go build *.go （此操作会对整个项目进行编译 ）</li></ol><p><img src="/./../../../../../assets/image-20230509100715595.png" alt="image-20230509100715595"></p><p><img src="/./../../../../../assets/image-20230509102347474.png" alt="image-20230509102347474"></p><p>按照如上步骤配置好后，再次右键运行，将得到如下输出：</p><pre class="line-numbers language-none"><code class="language-none">GOROOT&#x3D;C:\Program Files\Go #gosetupGOPATH&#x3D;C:\Users\&#123;YourName&#125;\go #gosetup&quot;C:\Program Files\Go\bin\go.exe&quot; build -o C:\Users\&#123;YourName&#125;\AppData\Local\Temp\GoLand\___go_build_helloworld_go.exe C:\Users\&#123;YourName&#125;\go\src\hello\helloworld.go #gosetupC:\Users\&#123;YourName&#125;\AppData\Local\Temp\GoLand\___go_build_helloworld_go.exeHello World<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="简述hello-world程序"><a href="#简述hello-world程序" class="headerlink" title="简述hello world程序"></a>简述hello world程序</h1><pre class="line-numbers language-go" data-language="go"><code class="language-go"><span class="token keyword">package</span> main <span class="token comment">// 1</span><span class="token keyword">import</span> <span class="token string">"fmt"</span> <span class="token comment">// 2</span><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 3</span>    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"Hello World"</span><span class="token punctuation">)</span> <span class="token comment">// 4</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在简单介绍每一行大概都做了些什么，在以后的教程中还会深入探讨每个部分。</p><p><strong>package main - 每一个 Go 文件都应该在开头进行 <code>package name</code> 的声明</strong>（译注：只有可执行程序的包名应当为 main）。包（Packages）用于代码的封装与重用，这里的包名称是<code>main</code>。</p><p><strong>import “fmt”</strong> - 我们引入了 fmt 包，用于在 main 函数里面打印文本到标准输出。</p><p><strong>func main()</strong> - main 是一个特殊的函数。整个程序就是从 main 函数开始运行的。<strong>main 函数必须放置在 main 包中</strong>。<code>&#123;</code> 和 <code>&#125;</code> 分别表示 main 函数的开始和结束部分。</p><p><strong>fmt.Println(“Hello World”)</strong> - <strong>fmt</strong> 包中的 <strong>Println</strong> 函数用于把文本写入标准输出。</p><p>现在你可以进入<a href="">《Golang tutorial series》 3.变量</a> 中学习Golang 中的变量。</p><p>请提供给我们宝贵的反馈和意见。感谢您的阅读。</p><hr><p>上一教程：<a href="./4a17b880c4ad.html">1.介绍与安装</a></p><p>下一教程：<a href="">3.变量</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是我们 &lt;a href=&quot;./34725805bd6c.html&quot;&gt;Golang tutorial series&lt;/a&gt; 的第 2 个教程。本教程我们将会建立 Go 的工作区，编写并运行我们的第一个 Go 程序。&lt;/p&gt;
&lt;p&gt;学习一种编程语言的最好方法就是动手去实践，编写代码。让我们开始编</summary>
    
    
    
    <category term="《Golang tutorial series》" scheme="https://forcemain.github.io/categories/%E3%80%8AGolang-tutorial-series%E3%80%8B/"/>
    
    
    <category term="Go" scheme="https://forcemain.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>《Golang tutorial series》 1.介绍与安装</title>
    <link href="https://forcemain.github.io/4a17b880c4ad.html"/>
    <id>https://forcemain.github.io/4a17b880c4ad.html</id>
    <published>2023-05-08T15:05:00.000Z</published>
    <updated>2023-05-09T00:37:05.111Z</updated>
    
    <content type="html"><![CDATA[<p>这是我们 <a href="./34725805bd6c.html">Golang tutorial series</a> 的第 1 个教程。本教程介绍了 Go，并讨论了选择 Go 相对于其它编程语言的优势。我们还将学习如何在 MacOS，Windows 和 Linux 中安装 Go。</p><hr><h1 id="Golang-是什么"><a href="#Golang-是什么" class="headerlink" title="Golang 是什么"></a>Golang 是什么</h1><p>Go 亦称为 Golang（译注：按照 <a href="https://en.wikipedia.org/wiki/Rob_Pike">Rob Pike</a> 说法，语言叫做 Go，Golang 只是官方网站的网址），是由 Google 开发的一种开源的编译型的静态语言。</p><p>Golang 的主要关注点是使得高可用性和可扩展性的 Web 应用的开发变得简便容易。（译注：Go 的定位是系统编程语言，只是对 Web 开发支持较好）</p><hr><h1 id="为什么选择Golang"><a href="#为什么选择Golang" class="headerlink" title="为什么选择Golang"></a>为什么选择Golang</h1><p>既然有很多其他编程语言可以做同样的工作，如 Python，Ruby，Nodejs 等，为什么要选择 Golang 作为服务端编程语言？</p><p>以下是我使用 Go 语言时发现的一些优点：</p><ul><li>并发是语言的一部分（译注：并非通过标准库实现），所以编写并发程序会是一件很容易的事。后续教程将会讨论到，并发是通过 Goroutines 和 channels 机制实现的。</li><li>Golang 是一种编译型语言。源代码会编译为二进制机器码。</li><li>Golang 使用垃圾收集器自动回收分配的内存。</li><li>Go 编译器支持静态链接。所有 Go 代码都可以静态链接为一个大的二进制文件（译注：相对现在的磁盘空间，其实根本不大），它可以很容易部署到云服务器中，而不必担心依赖关系。</li></ul><hr><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>Golang 支持三个平台：Mac，Windows 和 Linux（译注：不只是这三个，也支持其他主流平台）。你可以在 <a href="https://golang.org/dl/">https://golang.org/dl/</a> 中下载相应平台的二进制文件。（译注：因为众所周知的原因，如果下载不了，请到 <a href="https://studygolang.com/dl">https://studygolang.com/dl</a> 下载）</p><hr><h2 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h2><p>在 <a href="https://golang.org/dl/">https://golang.org/dl/</a> 下载安装程序。双击开始安装并且遵循安装提示，会将 Golang 安装到 <code>/usr/local/go</code> 目录下，同时 <code>/usr/local/go/bin</code> 文件夹也会被添加到 <code>PATH</code> 环境变量中。</p><hr><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>在 <a href="https://golang.org/dl/">https://golang.org/dl/</a> 下载 MSI 安装程序。双击开始安装并且遵循安装提示，会将 Golang 安装到 <code>C:\Go</code> 目录下，同时 <code>c:\Go\bin</code> 目录也会被添加到你的 <code>PATH</code> 环境变量中。</p><hr><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>在 <a href="https://golang.org/dl/">https://golang.org/dl/</a> 下载 tar 文件，并解压到 <code>/usr/local</code>。</p><p>请添加 <code>/usr/local/go/bin</code> 到 <code>PATH</code> 环境变量中。Go 就已经成功安装在 <code>Linux</code> 上了。</p><hr><h1 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h1><p>请在终端中执行<code>go version</code>，它将输出已安装的 Go 版本。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ go versiongo version go1.20.3 windows/amd64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在本系列下一部分 <a href="./79158520b0ea.html">《Golang tutorial series》 2.Hello World</a> 中，我们将会建立 Go 的工作区，编写我们第一个 Go 程序。</p><p>请提供您宝贵的反馈和意见。感谢您的阅读。</p><hr><p>下一教程：<a href="./79158520b0ea.html">2.Hello World</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;这是我们 &lt;a href=&quot;./34725805bd6c.html&quot;&gt;Golang tutorial series&lt;/a&gt; 的第 1 个教程。本教程介绍了 Go，并讨论了选择 Go 相对于其它编程语言的优势。我们还将学习如何在 MacOS，Windows 和 Linux 中安装 Go。&lt;/p&gt;</summary>
    
    
    
    <category term="《Golang tutorial series》" scheme="https://forcemain.github.io/categories/%E3%80%8AGolang-tutorial-series%E3%80%8B/"/>
    
    
    <category term="Go" scheme="https://forcemain.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>《Golang tutorial series》 目录</title>
    <link href="https://forcemain.github.io/34725805bd6c.html"/>
    <id>https://forcemain.github.io/34725805bd6c.html</id>
    <published>2023-05-08T15:05:00.000Z</published>
    <updated>2023-05-09T00:32:47.000Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="./4a17b880c4ad.html">1.介绍与安装</a></li><li><a href="./79158520b0ea.html">2.Hello World</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;./4a17b880c4ad.html&quot;&gt;1.介绍与安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;./79158520b0ea.html&quot;&gt;2.Hello World&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</summary>
    
    
    
    <category term="《Golang tutorial series》" scheme="https://forcemain.github.io/categories/%E3%80%8AGolang-tutorial-series%E3%80%8B/"/>
    
    
    <category term="Go" scheme="https://forcemain.github.io/tags/Go/"/>
    
  </entry>
  
</feed>
